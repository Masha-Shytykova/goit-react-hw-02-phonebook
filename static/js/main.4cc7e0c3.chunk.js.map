{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactListItem/ContactListItem.module.css"],"names":["ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","form__label","form__input","type","pattern","title","required","onChange","form__btn","Component","ContactListItem","id","onDeleteContact","list__item","list__btn","onClick","ContactList","contacts","map","Filter","App","filter","addContact","contact","uuidv1","find","toLowerCase","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById","module","exports"],"mappings":"iRA8DeA,E,4MA1DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,kBAAoB,SAAAC,GAClB,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMW,UAAWC,IAAEC,KAAMJ,SAAUK,KAAKR,aAAxC,UACE,wBAAOK,UAAWC,IAAEG,YAApB,iBAEE,uBACEJ,UAAWC,IAAEI,YACbC,KAAK,OACLlB,KAAK,OACLK,MAAOU,KAAKhB,MAAMC,KAClBmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKb,uBAGnB,wBAAOU,UAAWC,IAAEG,YAApB,yBAEE,uBACEJ,UAAWC,IAAEI,YACbC,KAAK,MACLlB,KAAK,SACLK,MAAOU,KAAKhB,MAAME,OAClBkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKb,uBAInB,wBAAQU,UAAWC,IAAEU,UAAWL,KAAK,SAArC,gC,GAnDkBM,a,gBCcXC,MAff,YAAiE,IAAtCC,EAAqC,EAArCA,GAAI1B,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQ0B,EAAmB,EAAnBA,gBAC3C,OACE,qBAAIf,UAAWC,IAAEe,WAAjB,UACG5B,EADH,KACWC,EACT,wBACEW,UAAWC,IAAEgB,UACbX,KAAK,SACLY,QAAS,kBAAMH,EAAgBD,IAHjC,wBCWSK,EAfK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUL,EAAsB,EAAtBA,gBAC/B,OACE,6BACGK,EAASC,KAAI,gBAAGjC,EAAH,EAAGA,KAAM0B,EAAT,EAASA,GAAIzB,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CACED,KAAMA,EAENC,OAAQA,EACR0B,gBAAiB,kBAAMA,EAAgBD,KAFlCA,SCGAQ,EAXA,SAAC,GAAyB,IAAvB7B,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACvB,OACE,8BACE,0DAEE,uBAAOJ,KAAK,OAAOlB,KAAK,SAASK,MAAOA,EAAOiB,SAAUA,U,QCgFlDa,E,4MA9EbpC,MAAQ,CACNiC,SAAU,GACVI,OAAQ,I,EAkBVC,WAAa,YAAuB,IAApBrC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACdqC,EAAU,CACdZ,GAAIa,cACJvC,KAAMA,EACNC,OAAQA,GAGV,GACE,EAAKF,MAAMiC,SAASQ,MAClB,SAAAF,GAAO,OAAIA,EAAQtC,KAAKyC,gBAAkBzC,EAAKyC,iBAGjD,OAAOC,MAAM,GAAD,OAAI1C,EAAJ,6BAGd,EAAKM,UAAS,SAAAqC,GAAS,MAAK,CAC1BX,SAAS,CAAEM,GAAH,mBAAeK,EAAUX,gB,EAIrCY,aAAe,SAAAzC,GACb,EAAKG,SAAS,CAAE8B,OAAQjC,EAAMC,cAAcC,S,EAG9CwC,mBAAqB,WACnB,MAA6B,EAAK9C,MAA1BqC,EAAR,EAAQA,OAAQJ,EAAhB,EAAgBA,SACVc,EAAmBV,EAAOK,cAChC,OAAOT,EAASI,QAAO,SAAAE,GAAO,OAC5BA,EAAQtC,KAAKyC,cAAcM,SAASD,O,EAIxCE,cAAgB,SAAAC,GACd,EAAK3C,UAAS,SAAAqC,GAAS,MAAK,CAC1BX,SAAUW,EAAUX,SAASI,QAAO,SAAAE,GAAO,OAAIA,EAAQZ,KAAOuB,U,uDAjDlE,WACE,IAAMjB,EAAWkB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMtB,GAE9BoB,GACFrC,KAAKT,SAAS,CAAE0B,SAAUoB,M,gCAI9B,SAAmBG,EAAWZ,GACxB5B,KAAKhB,MAAMiC,WAAaW,EAAUX,UACpCkB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU1C,KAAKhB,MAAMiC,a,oBA0C/D,WACE,IAAQI,EAAWrB,KAAKhB,MAAhBqC,OACFsB,EAAkB3C,KAAK8B,qBAE7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAanC,SAAUK,KAAKsB,aAE5B,0CACA,cAAC,EAAD,CAAQhC,MAAO+B,EAAQd,SAAUP,KAAK6B,eACtC,cAAC,EAAD,CACEZ,SAAU0B,EACV/B,gBAAiBZ,KAAKiC,uB,GAxEdxB,aCDlBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,YAAc,iCAAiC,UAAY,iC,kBCA7JD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,UAAY,sC","file":"static/js/main.4cc7e0c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.form__label}>\r\n          Name\r\n          <input\r\n            className={s.form__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className={s.form__label}>\r\n          Phone number\r\n          <input\r\n            className={s.form__input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.form__btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.list__item}>\r\n      {name}: {number}\r\n      <button\r\n        className={s.list__btn}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactListItem;\r\n","import ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          key={id}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv1(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    if (\r\n      this.state.contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      return alert(`${name} is already in contacts.`);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3v5fN\",\"form__input\":\"ContactForm_form__input__-ERMK\",\"form__label\":\"ContactForm_form__label__3ig6e\",\"form__btn\":\"ContactForm_form__btn__hP0v3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ContactListItem_list__item__3hV0V\",\"list__btn\":\"ContactListItem_list__btn__1B3aF\"};"],"sourceRoot":""}