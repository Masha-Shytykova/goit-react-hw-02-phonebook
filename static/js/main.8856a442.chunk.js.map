{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","required","onChange","Component","ContactListItem","id","onDeleteContact","onClick","ContactList","contacts","map","Filter","App","filter","addContact","data","contact","uuidv1","find","toLowerCase","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8856a442.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","function ContactListItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactListItem;\r\n","import ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          key={id}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name{' '}\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = data => {\r\n    const contact = {\r\n      id: uuidv1(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    if (\r\n      this.state.contacts.find(\r\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      return alert(`${data.name} is already in contacts.`);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}